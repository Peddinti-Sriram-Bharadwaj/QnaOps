# k8s-fastapi.yaml
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
spec:
  selector:
    app: fastapi-app
  ports:
    - protocol: TCP
      port: 80 # External port for the LoadBalancer/NodePort
      targetPort: 8000 # Internal container port (matches API_PORT from ConfigMap)
  type: LoadBalancer # Or NodePort / ClusterIP depending on exposure needs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
spec:
  replicas: 2 # Start with 2, scale as needed
  selector:
    matchLabels:
      app: fastapi-app
  template:
    metadata:
      labels:
        app: fastapi-app
    spec:
      containers:
        - name: fastapi-app
          image: sriram9217/major_proj-fastapi-app:latest # Replace with your actual image
          # Use specific tag from API_IMAGE_TAG if desired, e.g.: your-registry/fastapi-app:v1.2.3
          ports:
            - containerPort: 8000 # Should match API_PORT in ConfigMap
          envFrom:
            - configMapRef:
                name: app-config # Load non-sensitive config
            - secretRef:
                name: app-secrets # Load secrets and connection details
          # The command uses the API_HOST and API_PORT from the mounted config
          # Ensure your app reads these from the environment
          command: ["uvicorn"]
          args: ["app.main:app", "--host", "$(API_HOST)", "--port", "$(API_PORT)"]
          # --- Resource Requests and Limits ---
          resources:
            requests:
              memory: "128Mi" # Request 128 Megabytes of RAM
              cpu: "100m"    # Request 0.1 CPU core (100 millicores) - IMPORTANT FOR HPA
            limits:
              memory: "512Mi" # Limit RAM usage to 512 Megabytes
              cpu: "500m"    # Limit CPU usage to 0.5 CPU core
          # ------------------------------------
          # Add readiness/liveness probes for better health checking
          readinessProbe:
            httpGet:
              path: /health # Assuming you have a /health endpoint
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health # Assuming you have a /health endpoint
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 20
